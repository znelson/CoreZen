name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest
    environment: build-and-sign

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Keychain For Signing
        env:
          SECRET_MACOS_CERTIFICATE_B64: ${{ secrets.MACOS_CERTIFICATE }}
          SECRET_MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          SECRET_KEYCHAIN_PWD: ${{ secrets.KEYCHAIN_PWD }}
        run: |
          # Set up path for certificate file
          CERTIFICATE_PATH=$RUNNER_TEMP/signing_certificate.p12
          echo Using signing certificate at: $CERTIFICATE_PATH

          # Decode base64 certificate secret into .p12 file
          echo -n "$SECRET_MACOS_CERTIFICATE_B64" | base64 --decode --output $CERTIFICATE_PATH

          # Set up path for keychain database
          KEYCHAIN_PATH=$RUNNER_TEMP/signing_keychain.keychain-db
          echo Using signing keychain at: $KEYCHAIN_PATH

          # Create and configure keychain database
          security create-keychain -p "$SECRET_KEYCHAIN_PWD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH

          # Unlock keychain before build process
          security unlock-keychain -p "$SECRET_KEYCHAIN_PWD" $KEYCHAIN_PATH

          # Import the signing certificate into keychain database
          security import $CERTIFICATE_PATH -P "$SECRET_MACOS_CERTIFICATE_PWD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Download Dependencies
        run: |
          Scripts/stage_dependencies.py --skip-prompt --download --intel

      - name: Carthage Dependencies
        run: |
          carthage update --platform mac

      - name: Build
        run: |
          xcodebuild build -scheme CoreZen -project CoreZen.xcodeproj

      - name: Analyze
        run: |
          xcodebuild analyze -scheme CoreZen -project CoreZen.xcodeproj
